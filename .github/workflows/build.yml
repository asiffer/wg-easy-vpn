name: Build
on:
  repository_dispatch:
    types: update

jobs:
  build:
    name: Build all
    env:
      GOPATH: /home/runner/work/wg-easy-vpn/wg-easy-vpn/go
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
          path: go/src/wg-easy-vpn

      - uses: actions/setup-go@v1
        with:
          go-version: '1.14.1' # The Go version to download (if necessary) and use.
      
      - name: Install packages
        uses: mstksg/get-package@v1
        with:
          apt-get: software-properties-common byacc flex dpkg-dev debhelper crossbuild-essential-armel crossbuild-essential-armhf crossbuild-essential-arm64
      
      - name: Get dependencies
        working-directory: go/src/wg-easy-vpn
        run: |
          env | grep GO
          go env
          pwd
          ls -al
          make deps

      - name: Build (amd64)
        working-directory: go/src/wg-easy-vpn
        run: |
          make GOARCH=amd64
          make debian GOARCH=amd64
      
      - name: Build (arm64)
        working-directory: go/src/wg-easy-vpn
        run: |
          make GOARCH=arm64
          make debian GOARCH=arm64

      - name: Build (armhf)
        working-directory: go/src/wg-easy-vpn
        run: |
          make GOARCH=arm GOARM=7
          make debian GOARCH=arm GOARM=7
        
      - name: Create debian packages
        working-directory: go/src/wg-easy-vpn
        run: |
          make debian GOARCH=amd64
          make debian GOARCH=arm64
          make debian GOARCH=arm GOARM=7

    #   - name: Upload binaries
    #     uses: actions/upload-artifact@v1
    #     with:
    #       name: netspot
    #       path: bin/


    #   - name: Upload debian package
    #     uses: actions/upload-artifact@v1
    #     with:
    #       name: netspot-debian-amd64
    #       path: dist/debian/